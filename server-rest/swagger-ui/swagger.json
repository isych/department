{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample spec for Department REST API",
    "version" : "v1",
    "title" : "Swagger spec for REST API",
    "termsOfService" : "http://www.testcompany.com/terms-and-conditions",
    "contact" : {
      "name" : "Igor",
      "url" : "http://www.testcompany.com",
      "email" : "@mrigor"
    },
    "license" : {
      "name" : "test task for EPAM",
      "url" : "http://www.testcompany.com/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "departments",
    "description" : "Endpoint for Department specific operations"
  }, {
    "name" : "employees",
    "description" : "Endpoint for Employee specific operations"
  } ],
  "paths" : {
    "/rest/departments" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "get all departments",
        "description" : "get all departments",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Department"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "departments" ],
        "summary" : "create new department",
        "description" : "create new department",
        "operationId" : "createWithLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "new department",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Department"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Department"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "departments" ],
        "summary" : "update department",
        "description" : "update department",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "new department",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Department"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/rest/departments/withAvgSalary" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "get all employees with information about average salary",
        "description" : "get department's list with information about average salary by each department. If department don't have any employees, then AVG salary will by = 0 ",
        "operationId" : "getAllWithAvgSalary",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DepartmentWithAverageSalary"
              }
            }
          }
        }
      }
    },
    "/rest/departments/{id}" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "get department by id",
        "description" : "get department by id",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "identifier of department",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          },
          "404" : {
            "description" : "department with such identifier doesn't exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "departments" ],
        "summary" : "delete department by id",
        "description" : "delete department by id",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "identifier of department",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "404" : {
            "description" : "department with such identifier doesn't exists"
          }
        }
      }
    },
    "/rest/departments/{id}/employees" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "get employee's list from department",
        "description" : "get employee from department",
        "operationId" : "getEmployeesByDepartment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "identifier of department",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          },
          "404" : {
            "description" : "department with such identifier doesn't exists"
          }
        }
      }
    },
    "/rest/employees" : {
      "get" : {
        "tags" : [ "employees" ],
        "summary" : "get all employees",
        "description" : "get all employees",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "employees" ],
        "summary" : "create employee",
        "description" : "create employee",
        "operationId" : "createWithLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "employees" ],
        "summary" : "update employee",
        "description" : "update employee",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "new employee",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/rest/employees/filtered" : {
      "get" : {
        "tags" : [ "employees" ],
        "summary" : "get filtered list of employees",
        "description" : "get filtered list of employees by params",
        "operationId" : "filter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "like '2016-01-01'",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "x-example" : "2016-01-01"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "like '2016-01-01'",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "x-example" : "2016-01-01"
        }, {
          "name" : "departmentid",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          }
        }
      }
    },
    "/rest/employees/{id}" : {
      "get" : {
        "tags" : [ "employees" ],
        "summary" : "get employee by id",
        "description" : "get employee by id",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "identifier of employee",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          },
          "404" : {
            "description" : "employee with such identifier doesn't exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "employees" ],
        "summary" : "delete employee by id",
        "description" : "delete employee by id",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "identifier of employee",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          },
          "404" : {
            "description" : "employee with such identifier doesn't exists"
          }
        }
      }
    }
  },
  "definitions" : {
    "Department" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "employeeList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Employee"
          }
        }
      }
    },
    "DepartmentWithAverageSalary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "averageSalary" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Employee" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "birthDay" : {
          "type" : "string",
          "format" : "date"
        },
        "salary" : {
          "type" : "integer",
          "format" : "int32"
        },
        "department" : {
          "$ref" : "#/definitions/Department"
        }
      }
    }
  }
}